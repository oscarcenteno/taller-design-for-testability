'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace EspecificacionesTecnicas.ConfirmarPago
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()>  _
    Partial Public Class CasoBasicoAlConfirmarUnPagoFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("Caso basico al confirmar un pago.feature",1)
#End ExternalSource
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()>  _
        Public Shared Sub FeatureSetup(ByVal testContext As Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("es-ES"), "Caso basico al confirmar un pago", "La confirmación de un pago implica la invocación a la entidad destino, la actuali"& _ 
                    "zación en base de datos y registro en bitácora", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()>  _
        Public Shared Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()>  _
        Public Overridable Sub TestInitialize()
            If ((Not (TechTalk.SpecFlow.FeatureContext.Current) Is Nothing)  _
                        AndAlso (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title <> "Caso basico al confirmar un pago")) Then
                EspecificacionesTecnicas.ConfirmarPago.CasoBasicoAlConfirmarUnPagoFeature.FeatureSetup(Nothing)
            End If
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Se realiza la confirmación de un pago autorizado por notificar"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Caso basico al confirmar un pago")>  _
        Public Overridable Sub SeRealizaLaConfirmacionDeUnPagoAutorizadoPorNotificar()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Se realiza la confirmación de un pago autorizado por notificar", CType(Nothing,String()))
#ExternalSource("Caso basico al confirmar un pago.feature",4)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
            Dim table1 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table1.AddRow(New String() {"Codigo de referencia", "Ref1"})
            table1.AddRow(New String() {"Estado", "Autorizado"})
            table1.AddRow(New String() {"Se ha notificado", "False"})
            table1.AddRow(New String() {"Codigo de Entidad Origen", "401"})
            table1.AddRow(New String() {"Codigo de Entidad Destino", "501"})
            table1.AddRow(New String() {"Numero de Telefono Destino", "60607070"})
            table1.AddRow(New String() {"Codigo de Moneda Destino", "1"})
            table1.AddRow(New String() {"Fecha Valor", "2015-06-01 11:59 AM"})
#ExternalSource("Caso basico al confirmar un pago.feature",6)
testRunner.Given("un pago", CType(Nothing,String), table1, "Dado ")
#End ExternalSource
            Dim table2 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table2.AddRow(New String() {"Url", "http://entidad501"})
            table2.AddRow(New String() {"TimeOut", "3000"})
            table2.AddRow(New String() {"Cn", "CnEntidad501"})
#ExternalSource("Caso basico al confirmar un pago.feature",17)
testRunner.And("estos parametros de confirmacion de la entidad 501", CType(Nothing,String), table2, "Y ")
#End ExternalSource
            Dim table3 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table3.AddRow(New String() {"Codigo de Referencia", "Ref1"})
            table3.AddRow(New String() {"Fecha y Hora Actual", "2015-06-01 12:00 PM"})
#ExternalSource("Caso basico al confirmar un pago.feature",23)
testRunner.When("se solicita confirmar el pago", CType(Nothing,String), table3, "Cuando ")
#End ExternalSource
            Dim table4 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table4.AddRow(New String() {"Codigo de Referencia", "Ref1"})
            table4.AddRow(New String() {"Codigo de Entidad Destino", "501"})
            table4.AddRow(New String() {"Url", "http://entidad501"})
            table4.AddRow(New String() {"TimeOut", "3000"})
            table4.AddRow(New String() {"Cn", "CnEntidad501"})
            table4.AddRow(New String() {"Fecha de Confirmacion", "2015-06-01 12:00 PM"})
#ExternalSource("Caso basico al confirmar un pago.feature",28)
testRunner.Then("se generara esta confirmacion a la entidad destino", CType(Nothing,String), table4, "Entonces ")
#End ExternalSource
            Dim table5 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table5.AddRow(New String() {"Codigo de Referencia", "Ref1"})
            table5.AddRow(New String() {"Estado", "Autorizado"})
            table5.AddRow(New String() {"Se ha notificado", "True"})
            table5.AddRow(New String() {"Codigo de Entidad Origen", "401"})
            table5.AddRow(New String() {"Codigo de Entidad Destino", "501"})
            table5.AddRow(New String() {"Numero de Telefono Destino", "60607070"})
            table5.AddRow(New String() {"Codigo de Moneda Destino", "1"})
            table5.AddRow(New String() {"Fecha Valor", "2015-06-01 11:59 AM"})
            table5.AddRow(New String() {"Fecha de Confirmacion", "2015-06-01 12:00 PM"})
#ExternalSource("Caso basico al confirmar un pago.feature",37)
testRunner.And("se actualizara la informacion del pago en la base de datos", CType(Nothing,String), table5, "Y ")
#End ExternalSource
#ExternalSource("Caso basico al confirmar un pago.feature",49)
testRunner.And("se escribirá en bitacora que el pago fue confirmado", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Y ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
