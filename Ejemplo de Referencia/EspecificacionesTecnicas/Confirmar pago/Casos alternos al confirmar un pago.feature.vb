'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace EspecificacionesTecnicas.ConfirmarPago
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()>  _
    Partial Public Class CasosAlternosAlConfirmarUnPagoFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("Casos alternos al confirmar un pago.feature",1)
#End ExternalSource
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()>  _
        Public Shared Sub FeatureSetup(ByVal testContext As Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("es-ES"), "Casos alternos al confirmar un pago", "Se detalla las validaciones y acciones esperadas.", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()>  _
        Public Shared Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()>  _
        Public Overridable Sub TestInitialize()
            If ((Not (TechTalk.SpecFlow.FeatureContext.Current) Is Nothing)  _
                        AndAlso (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title <> "Casos alternos al confirmar un pago")) Then
                EspecificacionesTecnicas.ConfirmarPago.CasosAlternosAlConfirmarUnPagoFeature.FeatureSetup(Nothing)
            End If
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Solo se confirmará pagos autorizados"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Casos alternos al confirmar un pago")>  _
        Public Overridable Sub SoloSeConfirmaraPagosAutorizados()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Solo se confirmará pagos autorizados", CType(Nothing,String()))
#ExternalSource("Casos alternos al confirmar un pago.feature",4)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
            Dim table1 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table1.AddRow(New String() {"Codigo de Referencia", "Ref2"})
            table1.AddRow(New String() {"Estado", "EnProceso"})
#ExternalSource("Casos alternos al confirmar un pago.feature",6)
testRunner.Given("un pago", CType(Nothing,String), table1, "Dado ")
#End ExternalSource
            Dim table2 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table2.AddRow(New String() {"Codigo de referencia", "Ref2"})
#ExternalSource("Casos alternos al confirmar un pago.feature",10)
testRunner.When("se solicita confirmar el pago", CType(Nothing,String), table2, "Cuando ")
#End ExternalSource
#ExternalSource("Casos alternos al confirmar un pago.feature",13)
testRunner.Then("se registra en bitacora que solo se confirma pagos autorizados y no notificados """& _ 
                    "No se confirmó el pago con Cod. Referencia [Ref2] pues debe estar autorizado y n"& _ 
                    "o notificado.""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Entonces ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Se enviará una sola confirmación a la entidad destino"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Casos alternos al confirmar un pago")>  _
        Public Overridable Sub SeEnviaraUnaSolaConfirmacionALaEntidadDestino()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Se enviará una sola confirmación a la entidad destino", CType(Nothing,String()))
#ExternalSource("Casos alternos al confirmar un pago.feature",15)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
            Dim table3 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table3.AddRow(New String() {"Codigo de Referencia", "Ref2"})
            table3.AddRow(New String() {"Estado", "Autorizado"})
            table3.AddRow(New String() {"Se ha notificado", "True"})
#ExternalSource("Casos alternos al confirmar un pago.feature",17)
testRunner.Given("un pago", CType(Nothing,String), table3, "Dado ")
#End ExternalSource
            Dim table4 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table4.AddRow(New String() {"Codigo de Referencia", "Ref2"})
#ExternalSource("Casos alternos al confirmar un pago.feature",23)
testRunner.When("se solicita confirmar el pago", CType(Nothing,String), table4, "Cuando ")
#End ExternalSource
#ExternalSource("Casos alternos al confirmar un pago.feature",27)
testRunner.Then("se registra en bitacora que solo se confirma pagos autorizados y no notificados """& _ 
                    "No se confirmó el pago con Cod. Referencia [Ref2] pues debe estar autorizado y n"& _ 
                    "o notificado.""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Entonces ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Se reintentará si no hay comunicación con la entidad destino"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Casos alternos al confirmar un pago")>  _
        Public Overridable Sub SeReintentaraSiNoHayComunicacionConLaEntidadDestino()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Se reintentará si no hay comunicación con la entidad destino", CType(Nothing,String()))
#ExternalSource("Casos alternos al confirmar un pago.feature",29)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
            Dim table5 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table5.AddRow(New String() {"Codigo de referencia", "Ref1"})
            table5.AddRow(New String() {"Estado", "Autorizado"})
            table5.AddRow(New String() {"Se ha notificado", "False"})
            table5.AddRow(New String() {"Codigo de Entidad Origen", "401"})
            table5.AddRow(New String() {"Codigo de Entidad Destino", "501"})
            table5.AddRow(New String() {"Numero de Telefono Destino", "60607070"})
            table5.AddRow(New String() {"Codigo de Moneda Destino", "1"})
            table5.AddRow(New String() {"Fecha Valor", "2015-06-01 11:59 AM"})
#ExternalSource("Casos alternos al confirmar un pago.feature",31)
testRunner.Given("un pago", CType(Nothing,String), table5, "Dado ")
#End ExternalSource
            Dim table6 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table6.AddRow(New String() {"Url", "http://entidad501"})
            table6.AddRow(New String() {"TimeOut", "3000"})
            table6.AddRow(New String() {"Cn", "CnEntidad501"})
#ExternalSource("Casos alternos al confirmar un pago.feature",42)
testRunner.And("estos parametros de confirmacion de la entidad 501", CType(Nothing,String), table6, "Y ")
#End ExternalSource
            Dim table7 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table7.AddRow(New String() {"Cantidad maxima de intentos", "3"})
            table7.AddRow(New String() {"Intervalo de notificacion", "00:05:00"})
#ExternalSource("Casos alternos al confirmar un pago.feature",48)
testRunner.And("estos parametros de recalendarizacion", CType(Nothing,String), table7, "Y ")
#End ExternalSource
#ExternalSource("Casos alternos al confirmar un pago.feature",53)
testRunner.And("no se tiene comunicacion con la entidad destino", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Y ")
#End ExternalSource
            Dim table8 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table8.AddRow(New String() {"Codigo de referencia", "Ref1"})
            table8.AddRow(New String() {"Fecha y Hora Actual", "2015-06-01 12:00 PM"})
            table8.AddRow(New String() {"Reintentos realizados", "0"})
#ExternalSource("Casos alternos al confirmar un pago.feature",55)
testRunner.When("se solicita confirmar el pago", CType(Nothing,String), table8, "Cuando ")
#End ExternalSource
            Dim table9 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table9.AddRow(New String() {"Codigo de Referencia", "Ref1"})
            table9.AddRow(New String() {"Codigo de Entidad Destino", "501"})
            table9.AddRow(New String() {"Url", "http://entidad501"})
            table9.AddRow(New String() {"TimeOut", "3000"})
            table9.AddRow(New String() {"Cn", "CnEntidad501"})
            table9.AddRow(New String() {"Fecha de Confirmacion", "2015-06-01 12:00 PM"})
#ExternalSource("Casos alternos al confirmar un pago.feature",61)
testRunner.Then("se generara esta confirmacion a la entidad destino", CType(Nothing,String), table9, "Entonces ")
#End ExternalSource
            Dim table10 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table10.AddRow(New String() {"Codigo de Referencia", "Ref1"})
            table10.AddRow(New String() {"Fecha de Inicio", "2015-06-01 12:05 PM"})
            table10.AddRow(New String() {"Numero de Reintento", "1"})
#ExternalSource("Casos alternos al confirmar un pago.feature",70)
testRunner.And("se recalendariza de esta manera", CType(Nothing,String), table10, "Y ")
#End ExternalSource
#ExternalSource("Casos alternos al confirmar un pago.feature",75)
testRunner.And("se registra la recalendarizacion en la bitacora ""Se ha calendarizado el reintento"& _ 
                    " para confirmar #1 para el pago con referencia Ref1 en la fecha/hora 01/06/2015 "& _ 
                    "12:05:00.""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Y ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("No se reintentará si no se puede invocar a la entidad por problemas de parámetros"& _ 
            ""),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Casos alternos al confirmar un pago")>  _
        Public Overridable Sub NoSeReintentaraSiNoSePuedeInvocarALaEntidadPorProblemasDeParametros()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("No se reintentará si no se puede invocar a la entidad por problemas de parámetros"& _ 
                    "", CType(Nothing,String()))
#ExternalSource("Casos alternos al confirmar un pago.feature",77)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
            Dim table11 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table11.AddRow(New String() {"Codigo de referencia", "Ref1"})
            table11.AddRow(New String() {"Estado", "Autorizado"})
            table11.AddRow(New String() {"Se ha notificado", "False"})
            table11.AddRow(New String() {"Codigo de Entidad Origen", "401"})
            table11.AddRow(New String() {"Codigo de Entidad Destino", "501"})
            table11.AddRow(New String() {"Numero de Telefono Destino", "60607070"})
            table11.AddRow(New String() {"Codigo de Moneda Destino", "1"})
            table11.AddRow(New String() {"Fecha Valor", "2015-06-01 11:59 AM"})
#ExternalSource("Casos alternos al confirmar un pago.feature",78)
testRunner.Given("un pago", CType(Nothing,String), table11, "Dado ")
#End ExternalSource
            Dim table12 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table12.AddRow(New String() {"Url", ""})
            table12.AddRow(New String() {"TimeOut", "3000"})
            table12.AddRow(New String() {"Cn", "CnEntidad501"})
#ExternalSource("Casos alternos al confirmar un pago.feature",89)
testRunner.And("estos parametros de confirmacion de la entidad 501", CType(Nothing,String), table12, "Y ")
#End ExternalSource
            Dim table13 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table13.AddRow(New String() {"Codigo de referencia", "Ref1"})
#ExternalSource("Casos alternos al confirmar un pago.feature",95)
testRunner.When("se solicita confirmar el pago", CType(Nothing,String), table13, "Cuando ")
#End ExternalSource
#ExternalSource("Casos alternos al confirmar un pago.feature",98)
testRunner.Then("se escribirá el error de parametros en bitacora ""No se confirmó el pago Ref1 pues"& _ 
                    " los parametros requeridos para invocar a la entidad 501 no están configurados""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Entonces ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
