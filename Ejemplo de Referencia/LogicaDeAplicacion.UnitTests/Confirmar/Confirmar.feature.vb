'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace LogicaDeAplicacion.UnitTests.Confirmar
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()>  _
    Partial Public Class FlujoBasicoFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("Confirmar.feature",1)
#End ExternalSource
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()>  _
        Public Shared Sub FeatureSetup(ByVal testContext As Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("es-ES"), "Flujo Basico", "", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()>  _
        Public Shared Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()>  _
        Public Overridable Sub TestInitialize()
            If ((Not (TechTalk.SpecFlow.FeatureContext.Current) Is Nothing)  _
                        AndAlso (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title <> "Flujo Basico")) Then
                LogicaDeAplicacion.UnitTests.Confirmar.FlujoBasicoFeature.FeatureSetup(Nothing)
            End If
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Confirmar_FlujoBasico_Exitoso"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Flujo Basico")>  _
        Public Overridable Sub Confirmar_FlujoBasico_Exitoso()
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("Confirmar_FlujoBasico_Exitoso", CType(Nothing,String()))
#ExternalSource("Confirmar.feature",3)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
            Dim table1 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table1.AddRow(New String() {"CodReferencia", "Ref1"})
            table1.AddRow(New String() {"Estado", "Autorizada"})
            table1.AddRow(New String() {"Se ha notificado", "False"})
            table1.AddRow(New String() {"CodEntidadOrigen", "401"})
            table1.AddRow(New String() {"CodEntidadDestino", "501"})
            table1.AddRow(New String() {"NumTelefonoDestino", "60607070"})
            table1.AddRow(New String() {"CodMonedaDestino", "1"})
            table1.AddRow(New String() {"FecValor", "2015-06-01 11:59 AM"})
#ExternalSource("Confirmar.feature",5)
testRunner.Given("esta transaccion", CType(Nothing,String), table1, "Dada ")
#End ExternalSource
            Dim table2 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table2.AddRow(New String() {"Url", "http://entidad501"})
            table2.AddRow(New String() {"TimeOut", "3000"})
            table2.AddRow(New String() {"Cn", "CnEntidad501"})
#ExternalSource("Confirmar.feature",16)
testRunner.And("estos parametros de confirmacion", CType(Nothing,String), table2, "Y ")
#End ExternalSource
#ExternalSource("Confirmar.feature",22)
testRunner.And("la fecha actual es ""2015-06-01 12:00 PM""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Y ")
#End ExternalSource
#ExternalSource("Confirmar.feature",24)
testRunner.When("la transaccion ""Ref1"" se envia a confirmar exitosamente", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Cuando ")
#End ExternalSource
            Dim table3 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table3.AddRow(New String() {"CodReferencia", "Ref1"})
            table3.AddRow(New String() {"CodEntidadDestino", "501"})
            table3.AddRow(New String() {"Url", "http://entidad501"})
            table3.AddRow(New String() {"TimeOut", "3000"})
            table3.AddRow(New String() {"Cn", "CnEntidad501"})
            table3.AddRow(New String() {"FecConfirmacion", "2015-06-01 12:00 PM"})
#ExternalSource("Confirmar.feature",26)
testRunner.Then("se genera esta confirmacion a la entidad destino", CType(Nothing,String), table3, "Entonces ")
#End ExternalSource
            Dim table4 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table4.AddRow(New String() {"CodReferencia", "Ref1"})
            table4.AddRow(New String() {"Estado", "Autorizada"})
            table4.AddRow(New String() {"Se ha notificado", "True"})
            table4.AddRow(New String() {"CodEntidadOrigen", "401"})
            table4.AddRow(New String() {"CodEntidadDestino", "501"})
            table4.AddRow(New String() {"NumTelefonoDestino", "60607070"})
            table4.AddRow(New String() {"CodMonedaDestino", "1"})
            table4.AddRow(New String() {"FecValor", "2015-06-01 11:59 AM"})
            table4.AddRow(New String() {"FecConfirmacion", "2015-06-01 12:00 PM"})
#ExternalSource("Confirmar.feature",35)
testRunner.And("se actualiza la informacion de la transaccion", CType(Nothing,String), table4, "Y ")
#End ExternalSource
#ExternalSource("Confirmar.feature",47)
testRunner.And("se registra este mensaje en la bitacora ""Se confirmó la operación con referencia "& _ 
                    "[Ref1] de la entidad origen [401], en moneda [1] hacia el teléfono [60607070] as"& _ 
                    "ociado a la entidad destino [501]""", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Y ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
