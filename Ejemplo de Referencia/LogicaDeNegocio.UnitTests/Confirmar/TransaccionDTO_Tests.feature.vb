'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by SpecFlow (http://www.specflow.org/).
'     SpecFlow Version:1.9.0.77
'     SpecFlow Generator Version:1.9.0.0
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
#Region "Designer generated code"
'#pragma warning disable
Imports TechTalk.SpecFlow

Namespace LogicaDeNegocio.UnitTests.Confirmar
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77"),  _
     System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()>  _
    Partial Public Class ComparacionDeTransaccionDTOFeature
        
        Private Shared testRunner As TechTalk.SpecFlow.ITestRunner
        
#ExternalSource("TransaccionDTO_Tests.feature",1)
#End ExternalSource
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()>  _
        Public Shared Sub FeatureSetup(ByVal testContext As Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner
            Dim featureInfo As TechTalk.SpecFlow.FeatureInfo = New TechTalk.SpecFlow.FeatureInfo(New System.Globalization.CultureInfo("es-ES"), "Comparacion de TransaccionDTO", "", ProgrammingLanguage.VB, CType(Nothing,String()))
            testRunner.OnFeatureStart(featureInfo)
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()>  _
        Public Shared Sub FeatureTearDown()
            testRunner.OnFeatureEnd
            testRunner = Nothing
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()>  _
        Public Overridable Sub TestInitialize()
            If ((Not (TechTalk.SpecFlow.FeatureContext.Current) Is Nothing)  _
                        AndAlso (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title <> "Comparacion de TransaccionDTO")) Then
                LogicaDeNegocio.UnitTests.Confirmar.ComparacionDeTransaccionDTOFeature.FeatureSetup(Nothing)
            End If
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()>  _
        Public Overridable Sub ScenarioTearDown()
            testRunner.OnScenarioEnd
        End Sub
        
        Public Overridable Sub ScenarioSetup(ByVal scenarioInfo As TechTalk.SpecFlow.ScenarioInfo)
            testRunner.OnScenarioStart(scenarioInfo)
        End Sub
        
        Public Overridable Sub ScenarioCleanup()
            testRunner.CollectScenarioErrors
        End Sub
        
        Public Overridable Sub FeatureBackground()
#ExternalSource("TransaccionDTO_Tests.feature",3)
#End ExternalSource
            Dim table1 As TechTalk.SpecFlow.Table = New TechTalk.SpecFlow.Table(New String() {"Propiedad", "Valor"})
            table1.AddRow(New String() {"Codigo de referencia", "Ref1"})
            table1.AddRow(New String() {"Codigo de Entidad Destino", "501"})
            table1.AddRow(New String() {"Codigo de Moneda Destino", "1"})
            table1.AddRow(New String() {"Codigo de Entidad Origen", "401"})
            table1.AddRow(New String() {"Numero de Telefono Destino", "60607070"})
            table1.AddRow(New String() {"Estado", "Autorizada"})
            table1.AddRow(New String() {"Fecha Valor", "2015-06-01 11:59 AM"})
            table1.AddRow(New String() {"Se ha notificado", "False"})
            table1.AddRow(New String() {"FechaDeConfirmacion", "2015-06-02 11:59 AM"})
#ExternalSource("TransaccionDTO_Tests.feature",4)
testRunner.Given("una transaccion base", CType(Nothing,String), table1, "Dado ")
#End ExternalSource
        End Sub
        
        Public Overridable Sub TransaccionDTO_Equals(ByVal intencion As String, ByVal codigoDeReferencia As String, ByVal codigoDeEntidadDestino As String, ByVal codigoDeMonedaDestino As String, ByVal codigoDeEntidadOrigen As String, ByVal numeroDeTelefonoDestino As String, ByVal estado As String, ByVal fechaValor As String, ByVal fechaDeConfirmacion As String, ByVal seHaNotificado As String, ByVal sonIguales As String, ByVal exampleTags() As String)
            Dim scenarioInfo As TechTalk.SpecFlow.ScenarioInfo = New TechTalk.SpecFlow.ScenarioInfo("TransaccionDTO_Equals", exampleTags)
#ExternalSource("TransaccionDTO_Tests.feature",16)
Me.ScenarioSetup(scenarioInfo)
#End ExternalSource
#ExternalSource("TransaccionDTO_Tests.feature",3)
Me.FeatureBackground
#End ExternalSource
#ExternalSource("TransaccionDTO_Tests.feature",17)
testRunner.Given(String.Format("otra con ""{0}"", ""{1}"", ""{2}"", ""{3}"", ""{4}"", ""{5}"", ""{6}"", ""{7}"", "" {8} """, codigoDeReferencia, codigoDeEntidadDestino, codigoDeMonedaDestino, codigoDeEntidadOrigen, numeroDeTelefonoDestino, estado, fechaValor, fechaDeConfirmacion, seHaNotificado), CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Dado ")
#End ExternalSource
#ExternalSource("TransaccionDTO_Tests.feature",18)
testRunner.When("se compara", CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Cuando ")
#End ExternalSource
#ExternalSource("TransaccionDTO_Tests.feature",19)
testRunner.Then(String.Format("""{0}""", sonIguales), CType(Nothing,String), CType(Nothing,TechTalk.SpecFlow.Table), "Entonces ")
#End ExternalSource
            Me.ScenarioCleanup
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Base"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "Base"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "Si")>  _
        Public Overridable Sub TransaccionDTO_Equals_Base()
            Me.TransaccionDTO_Equals("Base", "Ref1", "501", "1", "401", "60607070", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "No", "Si", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CodigoDeReferencia es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "CodigoDeReferencia es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref2"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_CodigoDeReferenciaEsDiferente()
            Me.TransaccionDTO_Equals("CodigoDeReferencia es diferente", "Ref2", "501", "1", "401", "60607070", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CodigoDeEntidadDestino es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "CodigoDeEntidadDestino es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "503"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_CodigoDeEntidadDestinoEsDiferente()
            Me.TransaccionDTO_Equals("CodigoDeEntidadDestino es diferente", "Ref1", "503", "1", "401", "60607070", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CodigoDeMonedaDestino es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "CodigoDeMonedaDestino es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "2"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_CodigoDeMonedaDestinoEsDiferente()
            Me.TransaccionDTO_Equals("CodigoDeMonedaDestino es diferente", "Ref1", "501", "2", "401", "60607070", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CodigoDeEntidadOrigen es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "CodigoDeEntidadOrigen es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "402"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_CodigoDeEntidadOrigenEsDiferente()
            Me.TransaccionDTO_Equals("CodigoDeEntidadOrigen es diferente", "Ref1", "501", "1", "402", "60607070", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NumeroDeTelefonoDestino es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "NumeroDeTelefonoDestino es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607071"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_NumeroDeTelefonoDestinoEsDiferente()
            Me.TransaccionDTO_Equals("NumeroDeTelefonoDestino es diferente", "Ref1", "501", "1", "401", "60607071", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Estado es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "Estado es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "EnProceso"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_EstadoEsDiferente()
            Me.TransaccionDTO_Equals("Estado es diferente", "Ref1", "501", "1", "401", "60607070", "EnProceso", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "FechaValor es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "FechaValor es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_FechaValorEsDiferente()
            Me.TransaccionDTO_Equals("FechaValor es diferente", "Ref1", "501", "1", "401", "60607070", "Autorizada", "2015-06-02 11:59 AM", "2015-06-02 11:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "FechaDeConfirmacion es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "FechaDeConfirmacion es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 12:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "No"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_FechaDeConfirmacionEsDiferente()
            Me.TransaccionDTO_Equals("FechaDeConfirmacion es diferente", "Ref1", "501", "1", "401", "60607070", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 12:59 AM", "No", "No", CType(Nothing,String()))
        End Sub
        
        <Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute(),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TransaccionDTO_Equals"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Comparacion de TransaccionDTO"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SeHaNotificado es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Intencion", "SeHaNotificado es diferente"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeReferencia", "Ref1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadDestino", "501"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeMonedaDestino", "1"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CodigoDeEntidadOrigen", "401"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NumeroDeTelefonoDestino", "60607070"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Estado", "Autorizada"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaValor", "2015-06-01 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FechaDeConfirmacion", "2015-06-02 11:59 AM"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SeHaNotificado", "Si"),  _
         Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:son iguales", "No")>  _
        Public Overridable Sub TransaccionDTO_Equals_SeHaNotificadoEsDiferente()
            Me.TransaccionDTO_Equals("SeHaNotificado es diferente", "Ref1", "501", "1", "401", "60607070", "Autorizada", "2015-06-01 11:59 AM", "2015-06-02 11:59 AM", "Si", "No", CType(Nothing,String()))
        End Sub
    End Class
End Namespace
'#pragma warning restore
#End Region
